const fs = require('fs');
const config = require('../settings');
const { lite, commands } = require('../lite');

lite({
    pattern: "menu",
    react: "üî•",
    alias: ["allmenu", "cmd"],
    desc: "Affiche le menu complet avec contr√¥les de groupe",
    category: "main",
    filename: __filename
},
async (conn, mek, m, {
    from, quoted, pushname, reply
}) => {
    try {
        // Calcul de l'uptime
        const uptime = process.uptime();
        const days = Math.floor(uptime / (3600 * 24));
        const hours = Math.floor((uptime % (3600 * 24)) / 3600);
        const minutes = Math.floor((uptime % 3600) / 60);
        const formattedUptime = `${days}j ${hours}h ${minutes}m`;
        
        // Cat√©gories am√©lior√©es
        const categories = {
            'group': 'üë• COMMANDES GROUPE',
            'download': 'üì• T√âL√âCHARGEMENTS',
            'fun': 'üéÆ DIVERTISSEMENT & JEUX',
            'owner': 'üëë ADMINISTRATION',
            'ai': 'üß† INTELLIGENCE ARTIFICIELLE',
            'bug': 'üêû BUG GROUP',
            'tools': 'üõ†Ô∏è OUTILS',
            'media': 'üéµ M√âDIA'
        };

        // G√©n√©ration du contenu des cat√©gories
        let menuContent = {};
        for (const category in categories) {
            menuContent[category] = '';
        }

        for (let cmd of commands) {
            if (cmd.pattern && !cmd.dontAddCommandList && categories[cmd.category]) {
                menuContent[cmd.category] += `‚îÇ ‚¨° ${cmd.pattern}\n`;
            }
        }

        // Construction du menu principal
        let madeMenu = `
‚ï≠‚ïê‚ïê‚ïê‚ú¶„Äî ü§ñ *${config.BOT_NAME}* „Äï‚ú¶‚ïê‚ïê‚ïê‚ïÆ
‚îÇ üë§ Utilisateur : ${pushname}
‚îÇ ‚ö° Pr√©fixe     : [ ${config.PREFIX} ]
‚îÇ üõ°Ô∏è Mode        : [ ${config.MODE} ]
‚îÇ üîÑ Uptime      : ${formattedUptime}
‚îÇ üöÄ Version     : ${config.version} BETA
‚ï∞‚ïê‚ïê‚ïê‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚ïê‚ïê‚ïê‚ïØ

üìö *CAT√âGORIES PRINCIPALES:*
`;

        // Ajout des cat√©gories au menu
        for (const [category, title] of Object.entries(categories)) {
            if (menuContent[category]) {
                madeMenu += `
‚ï≠‚ïê‚ïê‚ïê‚ú¶„Äî ${title} „Äï‚ú¶‚ïê‚ïê‚ïê‚ïÆ
${menuContent[category]}
‚ï∞‚ïê‚ïê‚ïê‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚ïê‚ïê‚ïê‚ïØ`;
            }
        }

        // Section sp√©ciale Bug Group
        madeMenu += `

‚ï≠‚ïê‚ïê‚ïê‚ú¶„Äî üö® *BUG GROUP CONTROLS* „Äï‚ú¶‚ïê‚ïê‚ïê‚ïÆ
‚îÇ 
‚îÇ .antipurge [on/off]  - Bloquer les purges
‚îÇ .purge                - Purger les messages
‚îÇ .lockgroup            - Verrouiller le groupe
‚îÇ .unlockgroup          - D√©verrouiller
‚îÇ .restrict [all/none]  - Restrictions
‚îÇ 
‚ï∞‚ïê‚ïê‚ïê‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚ïê‚ïê‚ïê‚ïØ

‚ï≠‚ïê‚ïê‚ïê‚ú¶„Äî üé≤ *JEUX DISPONIBLES* „Äï‚ú¶‚ïê‚ïê‚ïê‚ïÆ
‚îÇ 
‚îÇ .actionverite - Jeu Action ou V√©rit√©
‚îÇ .quiz         - Quiz interactif
‚îÇ .devinette    - Devine le nombre
‚îÇ 
‚ï∞‚ïê‚ïê‚ïê‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚úß‚ú¶‚ïê‚ïê‚ïê‚ïØ

> ${config.DESCRIPTION || "Bot PATERSON-MD cr√©√© par KERVENS AUBOURG"}
¬© ${new Date().getFullYear()} PATERSON-MD | Tous droits r√©serv√©s`;

        // Envoi du menu avec image
        await conn.sendMessage(
            from,
            {
                image: { url: config.MENU_IMAGE_URL || 'https://i.ibb.co/pXL9RYv/temp-image.jpg' },
                caption: madeMenu,
                contextInfo: {
                    mentionedJid: [m.sender],
                    forwardingScore: 999,
                    isForwarded: true
                }
            },
            { quoted: mek }
        );

    } catch (e) {
        console.error('Erreur du menu:', e);
        reply(`‚ùå Erreur lors du chargement du menu: ${e.message}`);
    }
});
